{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","memo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","prepTodos","App","useState","setTitle","selectedUserId","setSelectedUserId","setTodos","shouldErrorOnUserSelect","setErrorOnUserSelect","shouldErrorOnTitleInput","setErrorOnTitleInput","onSubmit","event","preventDefault","trim","current","maxTodoId","Math","max","htmlFor","type","placeholder","value","onChange","currentTarget","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cbe5d77.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { memo } from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = memo(({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n));\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = memo(({ todo }) => {\n  const {\n    id, completed, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed bg-success': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{ title }</h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n});\n","import React, { memo } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = memo(({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n));\n","import './App.scss';\nimport 'bulma/css/bulma.css';\nimport { FormEvent, useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst prepTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState(prepTodos);\n\n  const [shouldErrorOnUserSelect, setErrorOnUserSelect] = useState(false);\n  const [shouldErrorOnTitleInput, setErrorOnTitleInput] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    if (shouldErrorOnTitleInput === true) {\n      setErrorOnTitleInput(false);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.currentTarget.value);\n    if (shouldErrorOnUserSelect === true) {\n      setErrorOnUserSelect(false);\n    }\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    setErrorOnTitleInput(!title.trim());\n    setErrorOnUserSelect(!selectedUserId);\n\n    if (title.trim() === '' || selectedUserId === 0) {\n      setErrorOnTitleInput(title.trim() === '');\n      setErrorOnUserSelect(selectedUserId === 0);\n\n      return;\n    }\n\n    // const userToAdd = getUserById(selectedUser);\n\n    setTodos(current => {\n      const maxTodoId = Math.max(...current.map(todo => todo.id));\n\n      return [\n        ...current,\n        {\n          id: maxTodoId + 1,\n          title,\n          completed: false,\n          userId: selectedUserId,\n          user: getUserById(selectedUserId),\n        },\n      ];\n    });\n\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\"> Write down your task:</label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter title of task\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {shouldErrorOnTitleInput && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"title\">Choose a user:</label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserChange}\n          >\n            <option disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {shouldErrorOnUserSelect && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}